"""Simplify attendance status to only Present/Absent/OFF

Revision ID: e17358e86af8
Revises: f5a2b3c4d5e6
Create Date: 2025-10-10 16:56:09.350229

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e17358e86af8'
down_revision = 'f5a2b3c4d5e6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # First, update existing records to valid statuses before adding constraint
    # Convert 'Late' to 'Present' (since late employees are still present)
    op.execute("UPDATE attendance SET attendance_status = 'Present' WHERE attendance_status = 'Late'")

    # Convert other invalid statuses to 'Absent', but preserve 'OFF' if it exists
    op.execute("UPDATE attendance SET attendance_status = 'Absent' WHERE attendance_status NOT IN ('Present', 'Absent', 'OFF')")

    with op.batch_alter_table('attendance', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_attendance_employee_date_status'))

    with op.batch_alter_table('deductions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_deduction_employee_active'))
        batch_op.drop_index(batch_op.f('idx_deduction_employee_id'))

    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_employee_salary_code'))

    with op.batch_alter_table('wage_masters', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_wage_master_salary_code'))
        batch_op.drop_index(batch_op.f('idx_wage_master_site_name'))

    # Add constraint to limit attendance_status to only 'Present', 'Absent', and 'OFF'
    op.create_check_constraint(
        'check_attendance_status',
        'attendance',
        "attendance_status IN ('Present', 'Absent', 'OFF')"
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop the attendance status constraint
    op.drop_constraint('check_attendance_status', 'attendance', type_='check')

    with op.batch_alter_table('wage_masters', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_wage_master_site_name'), ['site_name'], unique=False)
        batch_op.create_index(batch_op.f('idx_wage_master_salary_code'), ['salary_code'], unique=False)

    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_employee_salary_code'), ['salary_code'], unique=False)

    with op.batch_alter_table('deductions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_deduction_employee_id'), ['employee_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_deduction_employee_active'), ['employee_id', 'start_month'], unique=False)

    with op.batch_alter_table('attendance', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_attendance_employee_date_status'), ['employee_id', 'attendance_date', 'attendance_status'], unique=False)

    # ### end Alembic commands ###
